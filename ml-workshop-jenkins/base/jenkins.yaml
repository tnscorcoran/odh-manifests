apiVersion: jenkins.io/v1alpha2
kind: Jenkins
metadata:
  name: ml-jenkins
spec:
  backup:
    action: {}
    containerName: ''
    interval: 0
    makeBackupBeforePodDeletion: false
  master:
    containers:
      - command:
          - /usr/bin/go-init
          - '-main'
          - /usr/libexec/s2i/run
        env:
          - name: OPENSHIFT_ENABLE_OAUTH
            value: 'true'
          - name: OPENSHIFT_ENABLE_REDIRECT_PROMPT
            value: 'true'
          - name: DISABLE_ADMINISTRATIVE_MONITORS
            value: 'false'
          - name: KUBERNETES_MASTER
            value: 'https://kubernetes.default:443'
          - name: KUBERNETES_TRUST_CERTIFICATES
            value: 'true'
          - name: JENKINS_SERVICE_NAME
            value: jenkins-operator-http-example
          - name: JNLP_SERVICE_NAME
            value: jenkins-operator-slave-example
          - name: JENKINS_UC_INSECURE
            value: 'false'
          - name: JENKINS_HOME
            value: /var/lib/jenkins
          - name: JAVA_OPTS
            value: >-
              -XX:+UnlockExperimentalVMOptions -XX:+UnlockExperimentalVMOptions
              -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAMFraction=1
              -Djenkins.install.runSetupWizard=false -Djava.awt.headless=true
        image: >-
          quay.io/redhat-developer/origin-jenkins@sha256:a8e94991bd42290c51310ad1d34554f1d1604813a9f15f8acf96e18f71ff65c7
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /login
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 420
          periodSeconds: 360
          timeoutSeconds: 240
        name: jenkins
        readinessProbe:
          httpGet:
            path: /login
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 3
          periodSeconds: 0
          timeoutSeconds: 240
        resources:
          limits:
            cpu: 4
            memory: 16Gi
          requests:
            cpu: 2
            memory: 16Gi
  clusterRoles:
    - apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: edit
  jenkinsAPISettings:
    authorizationStrategy: serviceAccount
  restore:
    action: {}
    containerName: ''
  configurationAsCode:
    configurations: []
    defaultConfig: true
    enableAutoReload: true
    enabled: true
  service:
    port: 8080
    type: ClusterIP
  serviceAccount:
    annotations:
      serviceaccounts.openshift.io/oauth-redirectreference.jenkins: >-
        {"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"jenkins-example"}}
  slaveService:
    port: 50000
    type: ClusterIP
